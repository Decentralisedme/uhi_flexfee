{"abi":[],"bytecode":{"object":"0x60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220997639983e2ba06886fb6e510e545b7f9ae0b2bd375e3b734353fe7ab48e126764736f6c63430008180033","sourceMap":"269:2489:103:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;269:2489:103;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220997639983e2ba06886fb6e510e545b7f9ae0b2bd375e3b734353fe7ab48e126764736f6c63430008180033","sourceMap":"269:2489:103:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library is intended for `forge test` environments. There may be gotchas when using salts in `forge script` or `forge create`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"HookMiner - a library for mining hook addresses\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/utils/HookMiner.sol\":\"HookMiner\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/v4-periphery/lib/openzeppelin-contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/v4-periphery/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/v4-periphery/lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/v4-periphery/lib/solmate/src/\",\":v4-core/=lib/v4-core/\",\":v4-periphery/=lib/v4-periphery/contracts/\",\"lib/v4-periphery:@uniswap/v4-core/=lib/v4-core/\"]},\"sources\":{\"test/utils/HookMiner.sol\":{\"keccak256\":\"0xda86d9d24ddb558022b1da8b0fd603e952e25ad11a53b61702dd0ece53a9392c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://90f138e451c17acb6cbf259388675d9d6a600bd257a4c3bccd16e4fef3c40a9f\",\"dweb:/ipfs/Qmda5mFS6zFvHN4yFGb9CmpRbf6QrFgBApSGsYBzPnT5om\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@ensdomains/=lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/v4-periphery/lib/openzeppelin-contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/v4-periphery/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","hardhat/=lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/v4-periphery/lib/openzeppelin-contracts/","openzeppelin/=lib/v4-periphery/lib/openzeppelin-contracts/contracts/","solmate/=lib/v4-periphery/lib/solmate/src/","v4-core/=lib/v4-core/","v4-periphery/=lib/v4-periphery/contracts/","lib/v4-periphery:@uniswap/v4-core/=lib/v4-core/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"test/utils/HookMiner.sol":"HookMiner"},"evmVersion":"cancun","libraries":{}},"sources":{"test/utils/HookMiner.sol":{"keccak256":"0xda86d9d24ddb558022b1da8b0fd603e952e25ad11a53b61702dd0ece53a9392c","urls":["bzz-raw://90f138e451c17acb6cbf259388675d9d6a600bd257a4c3bccd16e4fef3c40a9f","dweb:/ipfs/Qmda5mFS6zFvHN4yFGb9CmpRbf6QrFgBApSGsYBzPnT5om"],"license":"GPL-2.0-or-later"}},"version":1},"ast":{"absolutePath":"test/utils/HookMiner.sol","id":48727,"exportedSymbols":{"HookMiner":[48726]},"nodeType":"SourceUnit","src":"45:2714:103","nodes":[{"id":48605,"nodeType":"PragmaDirective","src":"45:24:103","nodes":[],"literals":["solidity","^","0.8",".21"]},{"id":48726,"nodeType":"ContractDefinition","src":"269:2489:103","nodes":[{"id":48609,"nodeType":"VariableDeclaration","src":"351:35:103","nodes":[],"constant":true,"mutability":"constant","name":"FLAG_MASK","nameLocation":"368:9:103","scope":48726,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":48607,"name":"uint160","nodeType":"ElementaryTypeName","src":"351:7:103","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"value":{"hexValue":"307833464646","id":48608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"380:6:103","typeDescriptions":{"typeIdentifier":"t_rational_16383_by_1","typeString":"int_const 16383"},"value":"0x3FFF"},"visibility":"internal"},{"id":48612,"nodeType":"VariableDeclaration","src":"466:35:103","nodes":[],"constant":true,"mutability":"constant","name":"MAX_LOOP","nameLocation":"483:8:103","scope":48726,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":48610,"name":"uint256","nodeType":"ElementaryTypeName","src":"466:7:103","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130305f303030","id":48611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"494:7:103","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100_000"},"visibility":"internal"},{"id":48688,"nodeType":"FunctionDefinition","src":"1305:671:103","nodes":[],"body":{"id":48687,"nodeType":"Block","src":"1478:498:103","nodes":[],"statements":[{"assignments":[48629],"declarations":[{"constant":false,"id":48629,"mutability":"mutable","name":"hookAddress","nameLocation":"1496:11:103","nodeType":"VariableDeclaration","scope":48687,"src":"1488:19:103","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48628,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:103","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":48630,"nodeType":"VariableDeclarationStatement","src":"1488:19:103"},{"assignments":[48632],"declarations":[{"constant":false,"id":48632,"mutability":"mutable","name":"creationCodeWithArgs","nameLocation":"1530:20:103","nodeType":"VariableDeclaration","scope":48687,"src":"1517:33:103","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":48631,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:103","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":48638,"initialValue":{"arguments":[{"id":48635,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48619,"src":"1570:12:103","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":48636,"name":"constructorArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48621,"src":"1584:15:103","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":48633,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1553:3:103","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":48634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1557:12:103","memberName":"encodePacked","nodeType":"MemberAccess","src":"1553:16:103","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":48637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1553:47:103","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1517:83:103"},{"assignments":[48640],"declarations":[{"constant":false,"id":48640,"mutability":"mutable","name":"salt","nameLocation":"1619:4:103","nodeType":"VariableDeclaration","scope":48687,"src":"1611:12:103","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":48639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1611:7:103","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":48641,"nodeType":"VariableDeclarationStatement","src":"1611:12:103"},{"body":{"id":48681,"nodeType":"Block","src":"1669:251:103","statements":[{"expression":{"id":48656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":48650,"name":"hookAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48629,"src":"1683:11:103","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":48652,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48615,"src":"1712:8:103","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":48653,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48640,"src":"1722:4:103","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":48654,"name":"creationCodeWithArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48632,"src":"1728:20:103","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":48651,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48725,"src":"1697:14:103","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (address,uint256,bytes memory) pure returns (address)"}},"id":48655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1697:52:103","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1683:66:103","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":48657,"nodeType":"ExpressionStatement","src":"1683:66:103"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":48671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":48665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":48663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":48660,"name":"hookAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48629,"src":"1775:11:103","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":48659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1767:7:103","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":48658,"name":"uint160","nodeType":"ElementaryTypeName","src":"1767:7:103","typeDescriptions":{}}},"id":48661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1767:20:103","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":48662,"name":"FLAG_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48609,"src":"1790:9:103","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"1767:32:103","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":48664,"name":"flags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48617,"src":"1803:5:103","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"1767:41:103","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":48670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":48666,"name":"hookAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48629,"src":"1812:11:103","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":48667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1824:4:103","memberName":"code","nodeType":"MemberAccess","src":"1812:16:103","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":48668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1829:6:103","memberName":"length","nodeType":"MemberAccess","src":"1812:23:103","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":48669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:103","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1812:28:103","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1767:73:103","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":48680,"nodeType":"IfStatement","src":"1763:147:103","trueBody":{"id":48679,"nodeType":"Block","src":"1842:68:103","statements":[{"expression":{"components":[{"id":48672,"name":"hookAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48629,"src":"1868:11:103","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":48675,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48640,"src":"1889:4:103","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":48674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1881:7:103","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":48673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1881:7:103","typeDescriptions":{}}},"id":48676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:13:103","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":48677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1867:28:103","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes32_$","typeString":"tuple(address,bytes32)"}},"functionReturnParameters":48627,"id":48678,"nodeType":"Return","src":"1860:35:103"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":48646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":48644,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48640,"src":"1644:4:103","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":48645,"name":"MAX_LOOP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48612,"src":"1651:8:103","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1644:15:103","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":48682,"initializationExpression":{"expression":{"id":48642,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48640,"src":"1638:4:103","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":48643,"nodeType":"ExpressionStatement","src":"1638:4:103"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":48648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1661:6:103","subExpression":{"id":48647,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48640,"src":"1661:4:103","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":48649,"nodeType":"ExpressionStatement","src":"1661:6:103"},"nodeType":"ForStatement","src":"1633:287:103"},{"expression":{"arguments":[{"hexValue":"486f6f6b4d696e65723a20636f756c64206e6f742066696e642073616c74","id":48684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1936:32:103","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d1dab06a04d8f93a124ffa7450ec224a2276944734a45783fc4af2730eb1272","typeString":"literal_string \"HookMiner: could not find salt\""},"value":"HookMiner: could not find salt"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3d1dab06a04d8f93a124ffa7450ec224a2276944734a45783fc4af2730eb1272","typeString":"literal_string \"HookMiner: could not find salt\""}],"id":48683,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1929:6:103","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":48685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:40:103","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48686,"nodeType":"ExpressionStatement","src":"1929:40:103"}]},"documentation":{"id":48613,"nodeType":"StructuredDocumentation","src":"508:792:103","text":"@notice Find a salt that produces a hook address with the desired `flags`\n @param deployer The address that will deploy the hook. In `forge test`, this will be the test contract `address(this)` or the pranking address\n                 In `forge script`, this should be `0x4e59b44847b379578588920cA78FbF26c0B4956C` (CREATE2 Deployer Proxy)\n @param flags The desired flags for the hook address\n @param creationCode The creation code of a hook contract. Example: `type(Counter).creationCode`\n @param constructorArgs The encoded constructor arguments of a hook contract. Example: `abi.encode(address(manager))`\n @return hookAddress salt and corresponding address that was found. The salt can be used in `new Hook{salt: salt}(<constructor arguments>)`"},"implemented":true,"kind":"function","modifiers":[],"name":"find","nameLocation":"1314:4:103","parameters":{"id":48622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48615,"mutability":"mutable","name":"deployer","nameLocation":"1327:8:103","nodeType":"VariableDeclaration","scope":48688,"src":"1319:16:103","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48614,"name":"address","nodeType":"ElementaryTypeName","src":"1319:7:103","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":48617,"mutability":"mutable","name":"flags","nameLocation":"1345:5:103","nodeType":"VariableDeclaration","scope":48688,"src":"1337:13:103","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":48616,"name":"uint160","nodeType":"ElementaryTypeName","src":"1337:7:103","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":48619,"mutability":"mutable","name":"creationCode","nameLocation":"1365:12:103","nodeType":"VariableDeclaration","scope":48688,"src":"1352:25:103","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":48618,"name":"bytes","nodeType":"ElementaryTypeName","src":"1352:5:103","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":48621,"mutability":"mutable","name":"constructorArgs","nameLocation":"1392:15:103","nodeType":"VariableDeclaration","scope":48688,"src":"1379:28:103","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":48620,"name":"bytes","nodeType":"ElementaryTypeName","src":"1379:5:103","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1318:90:103"},"returnParameters":{"id":48627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48688,"src":"1456:7:103","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48623,"name":"address","nodeType":"ElementaryTypeName","src":"1456:7:103","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":48626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48688,"src":"1465:7:103","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48625,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1465:7:103","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1455:18:103"},"scope":48726,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":48725,"nodeType":"FunctionDefinition","src":"2446:310:103","nodes":[],"body":{"id":48724,"nodeType":"Block","src":"2601:155:103","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30784646","id":48711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2689:4:103","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}],"id":48710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2682:6:103","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":48709,"name":"bytes1","nodeType":"ElementaryTypeName","src":"2682:6:103","typeDescriptions":{}}},"id":48712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2682:12:103","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"id":48713,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48691,"src":"2696:8:103","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":48714,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48693,"src":"2706:4:103","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":48716,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48695,"src":"2722:12:103","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":48715,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2712:9:103","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":48717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2712:23:103","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":48707,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2665:3:103","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":48708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2669:12:103","memberName":"encodePacked","nodeType":"MemberAccess","src":"2665:16:103","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":48718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2665:71:103","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":48706,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2655:9:103","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":48719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:82:103","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":48705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2647:7:103","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":48704,"name":"uint256","nodeType":"ElementaryTypeName","src":"2647:7:103","typeDescriptions":{}}},"id":48720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2647:91:103","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":48703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:103","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":48702,"name":"uint160","nodeType":"ElementaryTypeName","src":"2639:7:103","typeDescriptions":{}}},"id":48721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:100:103","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":48701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2618:7:103","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":48700,"name":"address","nodeType":"ElementaryTypeName","src":"2618:7:103","typeDescriptions":{}}},"id":48722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:131:103","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":48699,"id":48723,"nodeType":"Return","src":"2611:138:103"}]},"documentation":{"id":48689,"nodeType":"StructuredDocumentation","src":"1982:459:103","text":"@notice Precompute a contract address deployed via CREATE2\n @param deployer The address that will deploy the hook. In `forge test`, this will be the test contract `address(this)` or the pranking address\n                 In `forge script`, this should be `0x4e59b44847b379578588920cA78FbF26c0B4956C` (CREATE2 Deployer Proxy)\n @param salt The salt used to deploy the hook\n @param creationCode The creation code of a hook contract"},"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2455:14:103","parameters":{"id":48696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48691,"mutability":"mutable","name":"deployer","nameLocation":"2478:8:103","nodeType":"VariableDeclaration","scope":48725,"src":"2470:16:103","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48690,"name":"address","nodeType":"ElementaryTypeName","src":"2470:7:103","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":48693,"mutability":"mutable","name":"salt","nameLocation":"2496:4:103","nodeType":"VariableDeclaration","scope":48725,"src":"2488:12:103","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":48692,"name":"uint256","nodeType":"ElementaryTypeName","src":"2488:7:103","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":48695,"mutability":"mutable","name":"creationCode","nameLocation":"2515:12:103","nodeType":"VariableDeclaration","scope":48725,"src":"2502:25:103","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":48694,"name":"bytes","nodeType":"ElementaryTypeName","src":"2502:5:103","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2469:59:103"},"returnParameters":{"id":48699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48698,"mutability":"mutable","name":"hookAddress","nameLocation":"2584:11:103","nodeType":"VariableDeclaration","scope":48725,"src":"2576:19:103","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48697,"name":"address","nodeType":"ElementaryTypeName","src":"2576:7:103","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2575:21:103"},"scope":48726,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"HookMiner","contractDependencies":[],"contractKind":"library","documentation":{"id":48606,"nodeType":"StructuredDocumentation","src":"71:198:103","text":"@title HookMiner - a library for mining hook addresses\n @dev This library is intended for `forge test` environments. There may be gotchas when using salts in `forge script` or `forge create`"},"fullyImplemented":true,"linearizedBaseContracts":[48726],"name":"HookMiner","nameLocation":"277:9:103","scope":48727,"usedErrors":[],"usedEvents":[]}],"license":"GPL-2.0-or-later"},"id":103}